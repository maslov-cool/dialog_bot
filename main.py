# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–ª–∞—Å—Å—ã.
# @dialog_by_coding_lover_bot --> –Ω–∏–∫ –≤ —Ç–≥
import logging
from telegram.ext import Application, CommandHandler, ConversationHandler, MessageHandler, filters


# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)
BOT_TOKEN = '7652454044:AAH5_Mr4NL3zT2juywbi9L1hK_fksgHFLFs'


async def start(update, context):
    await update.message.reply_text('''üëã –ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –ø–æ–±–ª–∏–∂–µ.

–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?  
(–ù–∞–ø–∏—à–∏ —á–∏—Å–ª–æ)  
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å ‚Äî –æ—Ç–ø—Ä–∞–≤—å /skip  
–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–∫–æ–Ω—á–∏—Ç—å –æ–±—â–µ–Ω–∏–µ ‚Äî –æ—Ç–ø—Ä–∞–≤—å /stop
''')
    return 'AGE'


async def first_question(update, context):
    context.user_data['age'] = update.message.text
    await update.message.reply_text('''–¢–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –ø–æ–ª–æ–º:
- –ü–∞—Ä–µ–Ω—å
- –î–µ–≤—É—à–∫–∞''')
    return 'SEX'


async def skip_first(update, context):
    await update.message.reply_text(f'''–¢–∞–π–Ω–∞ –ø—Ä–∏–¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç–∏... üïµÔ∏è''')
    await second_question(update, context)


async def second_question(update, context):
    context.user_data['sex'] = update.message.text
    await update.message.reply_text('''üìç –ò–∑ –∫–∞–∫–æ–≥–æ —Ç—ã –≥–æ—Ä–æ–¥–∞?''')
    return 'CITY'


async def skip_second(update, context):
    await update.message.reply_text(f'''–¢–∞–π–Ω–∞ –ø—Ä–∏–¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç–∏... üïµÔ∏è''')
    await third_question(update, context)


async def third_question(update, context):
    context.user_data['city'] = update.message.text
    await update.message.reply_text('''–ö–∞–∫ –º–Ω–µ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å? (–ò–º—è –∏–ª–∏ –Ω–∏–∫)''')
    return 'NAME'


async def skip_third(update, context):
    await update.message.reply_text(f'''–¢–∞–π–Ω–∞ –ø—Ä–∏–¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç–∏... üïµÔ∏è''')
    await fourth_question(update, context)


async def fourth_question(update, context):
    context.user_data['name'] = update.message.text
    await update.message.reply_text('''–†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ –∏ –∫–æ–≥–æ —Ö–æ—á–µ—à—å –Ω–∞–π—Ç–∏, —á–µ–º –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –∑–∞–Ω—è—Ç—å—Å—è. 
–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –ª—É—á—à–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –∫–æ–º–ø–∞–Ω–∏—é.''')
    return 'DESCRIPTION'


async def skip_fourth(update, context):
    await update.message.reply_text(f'''–¢–∞–π–Ω–∞ –ø—Ä–∏–¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç–∏... üïµÔ∏è''')
    await fifth_question(update, context)


async def fifth_question(update, context):
    context.user_data['description'] = update.message.text
    await update.message.reply_text('''–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ üëç, –µ–≥–æ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.''')
    return 'PHOTO'


async def skip_fifth(update, context):
    await update.message.reply_text(f'''–¢–∞–π–Ω–∞ –ø—Ä–∏–¥–∞–µ—Ç —Ç–µ–±–µ –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç–∏... üïµÔ∏è''')
    await sixth_question(update, context)


async def sixth_question(update, context):
    photo = update.message.photo[-1]
    context.user_data['photo_file_id'] = photo.file_id
    await update.message.reply_text('''–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:''')
    await update.message.reply_photo(
        photo=context.user_data['photo_file_id'],
        caption=f'''{context.user_data['name']}, {context.user_data['age']}, {context.user_data['city']} ‚Äì 
{context.user_data['description']}'''
        )
    return ConversationHandler.END  # –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∞, –æ–∑–Ω–∞—á–∞—é—â–∞—è –∫–æ–Ω–µ—Ü –¥–∏–∞–ª–æ–≥–∞.
    # –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ states –∏ fallbacks —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏.


async def stop(update, context):
    await update.message.reply_text('''–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!''')
    return ConversationHandler.END


def main():
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç Application.
    # –í–º–µ—Å—Ç–æ —Å–ª–æ–≤–∞ "TOKEN" –Ω–∞–¥–æ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather —Ç–æ–∫–µ–Ω
    application = Application.builder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        # –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–∏–∞–ª–æ–≥.
        # –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /start. –û–Ω–∞ –∑–∞–¥–∞—ë—Ç –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å.
        entry_points=[CommandHandler('start', start)],

        # –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ª–æ–≥–∞.
        # –í–∞—Ä–∏–∞–Ω—Ç —Å –¥–≤—É–º—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏, —Ñ–∏–ª—å—Ç—Ä—É—é—â–∏–º–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
        states={
            'AGE': [MessageHandler(filters.TEXT & ~filters.COMMAND, first_question), CommandHandler("skip", skip_first)],
            'SEX': [MessageHandler(filters.TEXT & ~filters.COMMAND, second_question), CommandHandler("skip", skip_second)],
            'CITY': [MessageHandler(filters.TEXT & ~filters.COMMAND, third_question), CommandHandler("skip", skip_third)],
            'NAME': [MessageHandler(filters.TEXT & ~filters.COMMAND, fourth_question), CommandHandler("skip", skip_fourth)],
            'DESCRIPTION': [MessageHandler(filters.TEXT & ~filters.COMMAND, fifth_question), CommandHandler("skip", skip_fifth)],
            'PHOTO': [MessageHandler(filters.PHOTO, sixth_question)]
        },

        # –¢–æ—á–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞. –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî –∫–æ–º–∞–Ω–¥–∞ /stop.
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()


